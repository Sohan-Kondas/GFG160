//Rotten Oranges
class Solution {
  public:
    int orangesRotting(vector<vector<int>>& mat) {
        // Code here
        int n=mat.size(), m=mat[0].size(), ans=0, cnt=0;
        vector<vector<int>>vis(n, vector<int>(m,0));
        queue<pair<int, pair<int, int>>>q;
        for(int i=0; i<n; i++) {
            for(int j=0; j<m; j++) {
                if(mat[i][j]==2) {
                    vis[i][j]=1;
                    q.push({0,{i,j}});
                    cnt++;
                } else if(mat[i][j]) cnt++;
            }
        }
        vector<int>radd={-1,1,0,0};
        vector<int>cadd={0,0,-1,1};
        while(!q.empty()) {
            int t=q.front().first;
            int row=q.front().second.first;
            int col=q.front().second.second;
            q.pop();
            ans=max(ans, t);
            cnt--;
            for(int i=0; i<4; i++) {
                int nr=row+radd[i], nc=col+cadd[i];
                if(nr>=0 && nr<n && nc>=0 && nc<m && !vis[nr][nc] && mat[nr][nc]==1) {
                    vis[nr][nc]=1;
                    q.push({t+1, {nr,nc}});
                }
            }
        }
        if(cnt==0) return ans;
        else return -1;
    }
};
