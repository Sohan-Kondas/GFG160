//Spirally traversing a matrix
class Solution:
    # Function to return a list of integers denoting spiral traversal of matrix.
    def spirallyTraverse(self, mat):
        # code here
        m = len(mat)
        n = len(mat[0])
        res = []
        vis = [[False] * n for _ in range(m)]
        dr = [0, 1, 0, -1]
        dc = [1, 0, -1, 0]
        r, c = 0, 0
        idx = 0
        for _ in range(m * n):
            res.append(mat[r][c])
            vis[r][c] = True
            newR, newC = r + dr[idx], c + dc[idx]
            if 0 <= newR < m and 0 <= newC < n and not vis[newR][newC]:
                r, c = newR, newC
            else:
                idx = (idx + 1) % 4
                r += dr[idx]
                c += dc[idx]
        return res
