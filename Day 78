//Solve the Sudoku
class Solution {
  public:
    // Function to find a solved Sudoku.
    static void solveSudoku(vector<vector<int>>& mat) {
        // code here
        solve(mat, 0, 0);
    }
  private:
    static bool solve(vector<vector<int>>& mat, int i, int j) {
        if (i==9) {
            return true;
        }
        int ni=(j==8) ? i+1 : i;
        int nj=(j==8) ? 0 : j+1;
        if(mat[i][j]!=0) {
            return solve(mat, ni, nj);
        }
        for(int v=1; v<=9; v++) {
            if(isValid(mat, i, j, v)) {
                mat[i][j]=v;
                if(solve(mat, ni, nj)) {
                    return true;
                }
                mat[i][j]=0;
            }
        }
        return false;
    }
    
    static bool isValid(vector<vector<int>>& mat, int r, int c, int v) {
        for(int i=0; i<9; i++) {
            if(mat[i][c]==v || mat[r][i]==v) 
                return false;
        }
        int sr=(r/3)*3;
        int sc=(c/3)*3;
        for(int i=sr; i<sr+3; i++) {
            for(int j=sc; j<sc+3; j++) {
                if(mat[i][j]==v) {
                    return false;
                }
            }
        }
        return true;
    }
};
