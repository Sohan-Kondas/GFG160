//Mirror Tree

'''
class Node:
    def _init_(self, val):
        self.right = None
        self.data = val
        self.left = None
'''
# your task is to complete this function

class Solution:
    #Function to convert a binary tree into its mirror tree.
    def mirror(self, root):
        # Code here
        if root is None:
            return
        self.mirror(root.left)
        self.mirror(root.right)
        t=root.left
        root.left=root.right
        root.right=t
        
    def levelord(self, root):
        if root is None:
            print("N ", end="")
            return
        q=deque([root])
        while q:
            c=q.popleft()
            if c is None:
                print("N ", end="")
                continue
            print(c.data, end=" ")
            q.append(c.left)
            q.append(c.right)
